/* 引入 Montserrat 字体 */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700;800;900&display=swap');

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}


/* 🔥🔥深浅模式的做法：3.在 html 内赋予给上层标签，然后就可以一层层传递下去(js 内就是给到 body 标签） */
html, body {
	/* 统一增加字体样式 */
	font-family: "Montserrat", sans-serif; 
	/* 如果没 Montserrat 字体, 就显示为 sans-serif */
	color: var(--text-black);
}


/* 🔥🔥深浅模式的做法：1.现在全局定义颜色 */
:root {
	--text-black: #333332;
	--primary-color:#FAF4E5;
	--primary-pink: #e5a1aa;
	--size: 28px;


	/* 🌞浅色模式 Light Theme mode */
	--color-text-light: #333332;
	--color-background-light: #FAF4E5;
	--color-pink-light: #e5a1aa;
	--color-green-light: #7AD0AC;
	--color-blue-light: #8395CD;

	/* 🌛深色模式 Dark Theme mode */
	--color-text-dark: #FAF4E5;
	--color-background-dark: #8395CD;
}


/* 🔥🔥切换深浅模式的做法: 2.定义两组 classList（然后再赋予给 body 标签）, 相当于全局声明了两个模式, 然后进行切换 */
.light-theme {
	--color-text: var(--color-text-light);
	--color-background: var(--color-background-light);
	--color-pink: var(--color-pink-light);
	--color-green: var(--color-green-light);
	--color-blue: var(--color-blue-light);
}
  
.dark-theme {
	--color-text: var(--color-text-dark);
	--color-background: var(--color-background-dark);
	--color-pink: var(--color-text-dark);
	--color-green: var(--color-text-dark);
	--color-blue: var(--color-text-dark);
}




/* experience ———————————————————————————————————— */
.experience {
	position:fixed;
	width: 100vw;	
	height: 100vh;
}

.experience-canvas {
	width: 100%;
	height: 100%;
}



/* page ItSelf ———————————————————————————————————— */
.page {
	z-index: 999999;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

.page-wrapper {
	position: relative;
}


/* 开关 toggle Bar */
.toggle-bar {
	position: fixed;
	display: flex;
	gap: 20px;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	top: 48px;
	right: 48px;
	z-index: 9999999999999;
}

.sun-wrapper, 
.moon-wrapper {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
}


.toggle-button  {
	/* --size: 28px; */
	position: relative;
	background: linear-gradient(90deg, #f19af3, #f099b5);
	line-height: 0;
	perspective: 400px;
	font-size: var(--size);
}

.toggle-button  input[type="checkbox"],
.toggle-button  label,
.toggle-button  label::before,
.toggle-button  label::after,
.toggle-button  {
	appearance: none;
	display: inline-block;
	border-radius: var(--size);
	border: 0;
	transition: .35s ease-in-out;
	box-sizing: border-box;
	cursor: pointer;
}

.toggle-button  label {
	/* 按钮宽度 */
	width: calc(2.2 * var(--size));
	height: var(--size);
	background: #d7d7d7;
	overflow: hidden;
}

.toggle-button  input[type="checkbox"] {
	position: absolute;
	z-index: 1;
	width: calc(.8 * var(--size));
	height: calc(.8 * var(--size));
	top: calc(.1 * var(--size));
	left: calc(.1 * var(--size));
	background: linear-gradient(45deg, #dedede, #ffffff);
	box-shadow: 0 6px 7px rgba(0,0,0,0.3);
	outline: none;
	margin: 0;
}

  .toggle-button  input[type="checkbox"]:checked {
	left: calc(1.3 * var(--size));
}

  .toggle-button  input[type="checkbox"]:checked + label {
	background: transparent;
}

.toggle-button  label::before,
.toggle-button  label::after {
	/* 眼睛 */
	content: "· ·";
	position: absolute;
	overflow: hidden;
	left: calc(.15 * var(--size));
	top: calc(.5 * var(--size));
	height: var(--size);
	letter-spacing: calc(-0.04 * var(--size));
	color: #9b9b9b;
	font-family: "Times New Roman", serif;
	z-index: 2;
	font-size: calc(.6 * var(--size));
	border-radius: 0;
	transform-origin: 0 0 calc(-0.5 * var(--size));
	backface-visibility: hidden;
}

/* 嘴 */
.toggle-button  label::after {
	content: "●";
	top: calc(.65 * var(--size));
	left: calc(0.25 * var(--size));
	height: calc(.1 * var(--size));
	width: calc(.35 * var(--size));
	font-size: calc(0.2 * var(--size));
	transform-origin: 0 0 calc(-0.4 * var(--size));
}

.toggle-button  input[type="checkbox"]:checked + label::before,
.toggle-button  input[type="checkbox"]:checked + label::after {
	left: calc(1.55 * var(--size));
	top: calc(.4 * var(--size));
	line-height: calc(.1 * var(--size));
	transform: rotateY(360deg);
}

.toggle-button  input[type="checkbox"]:checked + label::after {
	height: calc(.16 * var(--size));
	top: calc(.55 * var(--size));
	left: calc(1.6 * var(--size));
	font-size: calc(.6 * var(--size));
	line-height: 0;
}



/* 另一种写法, 给 toggle 添加一个 slides 类，点击时赋予这个类 */
.slides {
	left: 124px;
}

/* #toggle-circle {
	width: 50px;
} */



/* 装饰标题 fancy Decoration Part of section ———————————————————————————————————— */
.section-title {
	position: relative;
	color: var(--primary-color-pink);
	z-index: 5;
}

.section-title-text {
	/* 👇显示为 block 是必要条件！ */
	display: block;
	font-size:40px;
	font-weight:500;
	/* 修改中心点 */
	transform-origin: left; 
	/* 让字体斜着展示 */
	transform: skewY(25deg); 
	text-transform: uppercase;
}



/* section formatting ———————————————————————————————————— */
.section-margin {
	/* 🔥称高底部的内容用 */
	height: 2000px;
}

.section {
	width: 50%;
	/* 每组内容上下间隔 1000px */
	padding: 1000px 4%;
	margin: 0;
	background-color: var(--primary-color);
	/* 右圆角 */
	/* border-top-right-radius: 28px; */
	border-radius: 28px;
}

.left {
	margin-right: auto;
}

.right {
	margin-left: auto;
}

.section-intro-wrapper {
	position: relative;
	padding: 20% 5%;
	/* 底部分割线 */
	border-bottom: 2px solid var(--primary-pink);
	padding-bottom: 400px;
}


.section-detail-wrapper {
	position: relative;
	padding: 20% 5%;
}

.section-heading {
	font-size: 18px;
	font-weight: Bold;
	line-height: 1.8;
	margin-top: 64px;
}

.section-text {
	line-height: 2;
	margin-top: 18px;
	font-size: 16px;
}

.styleOne,
.styleTwo,
.styleThree {
	position: absolute;
	display: block;
	max-width: 278px;
	width: 100%;
	height: 60px;
	border: 1px solid var(--primary-pink);
	/* 🔥改变旋转中心点 */
	transform-origin: left;
	/* 倾斜变形 */
	transform: skewY(-25deg); 
}

.styleOne {
	top: 0px;
}

.styleTwo {
	top: 80px;
}

.styleThree {
	top: 80px;
	/* 倾斜变形 */
	background-color: var(--primary-pink);
	transform: skewY(25deg);
}

.section-number {
	position: absolute;
	bottom: 16px;
	right: 0;
	color: var(--primary-pink);
	font-weight: Bold;
	font-size: 24px;
}




/* hero section ———————————————————————————————————— */
.hero {
	width: 100vw;
	height: 100vh;
}

.hero-wrapper {
	position: relative;
	width: calc(100% - 160px);
	height: 100%;
	margin: 0 auto;
	max-width: 1200px;
}

/* 第一部分 */
.hero-main {
	position: absolute;
	bottom: 168px;
	left: 0;
}

.hero-main-title {
	font-size: 64px;
}

.hero-main-description {
	font-size: 18px;
}

/* 第二部分 */
.hero-second {
	position: absolute;
	top: calc(50% - 120px);
	right: 0;
}

.hero-second-subheading {
	font-size: 32px;
	text-transform: uppercase;
}






/* 🚮 Trash ———————————————————————————————————— */
/* .toggle-circle {
	position: absolute;
	left: 3.5px;
	top: 2.5px;
	border-radius: 50%;
	width: 22px;
	height: 22px;
	background-color: var(--primary-color);
	transition: all 0.2s ease-in-out;
}


.toggle-button {
	cursor: pointer;
	position: relative;
	width: 58px;
	height: 28px;
	justify-content: center;
	align-items: center;
	background-color: var(--primary-pink);
	border-radius: 999px;
	margin: 0px 16px;
	border: none;
	box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
}
   */